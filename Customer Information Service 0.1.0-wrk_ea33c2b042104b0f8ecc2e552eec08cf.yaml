type: spec.insomnia.rest/5.0
name: Customer Information Service 0.1.0
meta:
  id: wrk_ea33c2b042104b0f8ecc2e552eec08cf
  created: 1752230135913
  modified: 1752230135913
  description: ""
collection:
  - url: "{{ _.base_url }}/health"
    name: Health check endpoint for Kubernetes
    meta:
      id: req_1a92056e91654172950822d5ea5a47ea
      created: 1752230144283
      modified: 1752230144283
      isPrivate: false
      description: Endpoint that returns the service health status.
      sortKey: -1752230144283
    method: GET
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/customer"
    name: Fetch a customers information
    meta:
      id: req_429cbd83dd8248659a9f1ec12003c6b0
      created: 1752230144283
      modified: 1752230144283
      isPrivate: false
      description: Fetch a customers information
      sortKey: -1752230144283
    method: GET
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/customer"
    name: Fetch a customers information
    meta:
      id: req_abec162ea80f48bf89027ed2eb3e294b
      created: 1752230144283
      modified: 1752230247324
      isPrivate: false
      description: Fetch a customers information
      sortKey: -1752230144283
    method: GET
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: https://api.kong-air/customer
    name: New Request
    meta:
      id: req_16525427e0674bd28e8a91c9880b190b
      created: 1752230146631
      modified: 1752230261026
      isPrivate: false
      description: ""
      sortKey: -1752230146631
    method: GET
    headers:
      - name: User-Agent
        value: insomnia/11.3.0
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
cookieJar:
  name: Default Jar
  meta:
    id: jar_0922f05fb0abef8a8a75f9514bf7e512307871b0
    created: 1752230137325
    modified: 1752230137325
environments:
  name: Base Environment
  meta:
    id: env_0922f05fb0abef8a8a75f9514bf7e512307871b0
    created: 1752230135915
    modified: 1752230144281
    isPrivate: false
  data:
    base_url: "{{ _.scheme }}://{{ _.host }}{{ _.base_path }}"
  subEnvironments:
    - name: OpenAPI env api.kong-air.com
      meta:
        id: env_b0b878bfae5f4d82b4b156c8f51b0c18
        created: 1752230144282
        modified: 1752230144282
        isPrivate: false
        sortKey: 1752230144282
      data:
        scheme: https
        base_path: ""
        host: api.kong-air.com
spec:
  contents:
    openapi: 3.0.0
    info:
      contact:
        name: Kong, Inc.
      description: |
        KongAir Customer Information service provides customer information
        (payment methods, contact info, frequent flyer, etc...)
      version: 0.1.0
      title: Customer Information Service
    servers:
      - url: https://api.kong-air.com
        description: KongAir API Server
    paths:
      /health:
        get:
          summary: Health check endpoint for Kubernetes
          description: Endpoint that returns the service health status.
          responses:
            "200":
              description: Service is healthy
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      status:
                        type: string
                        example: OK
            "500":
              description: Service is unhealthy
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      status:
                        type: string
                        example: unhealthy
      /customer:
        get:
          summary: Fetch a customers information
          description: Fetch a customers information
          tags:
            - sales
            - customer
          operationId: get-cust-info
          responses:
            "200":
              $ref: "#/components/responses/CustomerSingle"
            "404":
              description: Customer Not Found
    components:
      responses:
        CustomerSingle:
          description: A get action response for a single Customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
      schemas:
        PaymentMethod:
          type: object
          properties:
            id:
              type: string
            redacted_card_number:
              type: string
            card_holder_name:
              type: string
            expiration-date:
              type: string
        CustomerInformation:
          type: object
          properties:
            address:
              type: string
            phone_number:
              type: string
            email:
              type: string
            frequent_flier_number:
              type: string
            payment_methods:
              type: array
              items:
                $ref: "#/components/schemas/PaymentMethod"
        Customer:
          type: object
          properties:
            id:
              type: string
            username:
              type: string
            name:
              type: string
            information:
              $ref: "#/components/schemas/CustomerInformation"
  meta:
    id: spc_167fdd444e44434f8a525f9b6c6fe668
    created: 1752230135915
    modified: 1757998303732
